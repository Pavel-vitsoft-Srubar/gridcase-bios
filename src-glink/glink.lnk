
# Link script for GRiD 1520 BIOS

input {
	files => [
		../src/build/rom_header.obj
		../src/build/reset.obj
		../src/build/reset.obj
		../src/build/reset_utils.obj
		../src/build/post/vidtest.obj
		../src/build/post/kbc.obj
		../src/build/post/timer.obj
		../src/build/post/protmode.obj
		../src/build/int19.obj
		../src/build/int18.obj
		../src/build/int13_at.obj
		../src/build/int13_grid.obj
		../src/build/int14.obj
		../src/build/int16.obj
		../src/build/int9.obj
		../src/build/kbxlat.obj
		../src/build/keyboard.obj
		../src/build/kbc_286.obj
		../src/build/int13_fd.obj
		../src/build/fd_int13_handlers.obj
		../src/build/fd_std_dpbs.obj
		../src/build/fd_bda.obj
		../src/build/fd_commands.obj
		../src/build/fd_controller.obj
		../src/build/fd_misc.obj
		../src/build/int17.obj
		../src/build/int10.obj
		../src/build/int12.obj
		../src/build/int11.obj
		../src/build/sysident.obj
		../src/build/at_compat.obj
		../src/build/rom_trailer.obj
	]
}

output {
	bin => ../src/build/bios.bin
	map => ../src/build/bios.map
}

linker {
	define => {
		IntNmi_Actual			=> F000:C4F8
		Int15_Actual			=> F000:BD4C
		Int1A_Actual			=> F000:C1C5
		Int8_Actual				=> F000:C21C
		EoiPic1					=> F000:F53C
		DummyIsr				=> F000:C66D
		Int70					=> F000:C351
		Int71					=> F000:C664
		Int75					=> F000:C655
		EoiPic1and2				=> F000:F543
		PrntScrn_Actual			=> F000:C789
		SDH_03					=> F000:BE87
		ChecksumRom				=> F000:C405
		DetectMemController		=> F000:F63D
		ResetNmiChecks			=> F000:C5B9
		kBdaSegment				=> F000:C5E6
		kBootSegOffset			=> F000:C5E7
		kIvtSegment				=> F000:C5E9
		ParDetectPort			=> F000:C5CE
		ReadCmos				=> F000:C762
		WriteCmos				=> F000:C773
		GridAutodetect			=> F000:CFA3
		SetSoftResetFlag		=> F000:C5F9
		WriteString_Inline		=> F000:C4B3
		WriteString				=> F000:BD34
		VidInit					=> F000:D541
		VidInitBacklite			=> F000:D160
		WriteBiosBanner			=> F000:C458
		HdcTestDriveReady		=> F000:CEBB
		IdeAutodetect_70		=> F000:D09C
		Beep					=> F000:C3D3
		WriteCharHex2			=> F000:C4CB
		MemSetXmsEms			=> F000:D13C
		CheckFdConfigValid		=> F000:B27F
		HdcHookIvt				=> F000:C822
		ChecksumOptRom			=> F000:C409
		WriteCharHex4			=> F000:C4C4
		WriteChecksumFailMsg	=> F000:C4A4
		PwEnabled				=> F000:F180
		PwStartInput			=> F000:F1F2
		PwPrompt				=> F000:F422
		PwProcessInput			=> F000:F37B
		PwEndInput				=> F000:F1D2
		PwCompareStored			=> F000:F23A
		PwBackdoor2				=> F000:F291
		PwIncorrect				=> F000:F2D8
		PwClearBuffer			=> F000:F27A
		WriteBadCsumMsg			=> F000:C4A4
		WriteCrLf				=> F000:BD31
		WriteChar				=> F000:BD28
		GridBootRom				=> F000:D88A
		WaitKey					=> F000:C4E7
		DriveIdentify			=> F000:F56F
		MakeIsrStack			=> F000:C415
		UnmakeIsrStack			=> F000:C5EC
		FuncToOffset			=> F000:C444
		KbKeyClick				=> F000:C60F
		LoadBdaToDs				=> F000:C452
		CheckBiosChords			=> F000:C632
		FdGetMediaState			=> F000:D17B
		FdGetMediaState2		=> F000:D18A
		FdSetMediaState			=> F000:D192
		FdSetMediaState2		=> F000:D1A3
		FdGetOpStartState		=> F000:D1D8
		FdSetOpStartState		=> F000:D1E7
		FdGetCylinder			=> F000:D1F8
		FdSetCylinder			=> F000:D207
		FdExternalType			=> F000:D218
		FdCountDrives			=> F000:D1AB
		IsExtFdIndex			=> F000:D92C
		VidReadLightPen			=> F000:C6DF
		VidWinSelect			=> F000:B637
		VidWriteString			=> F000:BCD5
		GridVidInit				=> F000:D4DF
		GridVidInitHi			=> F000:D4B9
		VidGrapPelMask			=> F000:BC37
		UnmakeIsrStack2			=> F000:C5EB
		ConString2				=> F000:C5A5
		kCrLf					=> F000:C5F6
	}
	script => [
		advance	{ to 		=> 0000:0000									}
		link	{ input		=> .*,					segment	=> IVT,	virtual	=> true	}
		advance	{ to		=> 0040:0000									}
		link	{ input		=> .*,					segment	=> BDA,	virtual => true	}

		advance	{ to		=> F000:8000									}
		link	{ input		=> rom_header,			segment => CODE					}
		link	{ input		=> reset,				segment => CODE					}
		link	{ input		=> post_reset_util,		segment => CODE					}
		link	{ input		=> post_vidtest,		segment => CODE					}
		link	{ input		=> post_kbc,			segment => CODE					}
		link	{ input		=> post_timer,			segment => CODE					}
		link	{ input		=> post_protmode,		segment => CODE					}
		link	{ input		=> int19,				segment => CODE					}
		link	{ input		=> int18,				segment => CODE					}
		link	{ input		=> int13_at,			segment => CODE					}
		link	{ input		=> int13_grid,			segment => CODE					}
		link	{ input		=> int14,				segment => CODE					}
		link	{ input		=> int16,				segment => CODE					}
		link	{ input		=> int9,				segment => CODE					}
		link	{ input		=> kbxlat,				segment => CODE					}
		link	{ input		=> keyboard,			segment => CODE					}
		link	{ input		=> kbc_286,				segment => CODE					}
		link	{ input		=> int13_fd,			segment => CODE					}
		link	{ input		=> fd_int13_handle,		segment => CODE					}
		link	{ input		=> fd_std_dpbs,			segment => CODE					}
		link	{ input		=> fd_bda,				segment => CODE					}
		link	{ input		=> fd_commands,			segment => CODE					}
		link	{ input		=> fd_controller,		segment => CODE					}
		link	{ input		=> fd_misc,				segment => CODE					}
		link	{ input		=> int17,				segment => CODE					}
		link	{ input		=> int10,				segment => CODE					}
		link	{ input		=> int12,				segment => CODE					}
		link	{ input		=> int11,				segment => CODE					}

		fill	{ to		=> F000:DFD0,			with => 0xFF					}
		link	{ input		=> sysident,			segment => CODE					}
		#fill	{ to		=> F000:E000,			with => 0xFF					}
		link	{ input		=> at_compat,			segment => CODE					}
		link	{ input		=> rom_trailer,			segment => CODE					}
		end		{ }
	]
	assert => {
		Reset_Actual	= FFFF:FFF0
	}
}
